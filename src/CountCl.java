import java.util.*;

public class CountCl 
{
	public CountCl()
	{
		for(int i = 0; i < 16; i++)
		{
			c[i] = 0;
		}
	}
	public void calcSequence(int x, int ch)
	{
		switch(x)
		{
			case 1:
			{
				if (ch == 0)
				{
					c[0]++;
					c[3]++;
					c[5]++;
					c[6]++;
					c[9]++;
					c[10]++;
					c[12]++;
					c[15]++;
				}
				else
				{
					c[1]++;
					c[2]++;
					c[4]++;
					c[7]++;
					c[8]++;
					c[11]++;
					c[13]++;
					c[14]++;
				}
				break;
			}
			case 2:
			{
				if(ch == 0)
				{
					c[0]++; 
					c[3]++;
					c[4]++;
					c[7]++;
					c[9]++;
					c[10]++;
					c[13]++;
					c[14]++;
				}
				else
				{
					c[1]++;
					c[2]++;
					c[5]++;
					c[6]++;
					c[8]++;
					c[11]++;
					c[12]++;
					c[15]++;
				}
				break;
			}
			case 4:
			{
				if(ch == 0)
				{
					c[0]++;
					c[2]++;
					c[4]++;
					c[6]++;
					c[8]++;
					c[10]++;
					c[12]++;
					c[14]++;
				}
				else
				{
					c[1]++;
					c[3]++;
					c[5]++;
					c[7]++;
					c[9]++;
					c[11]++;
					c[13]++;
					c[15]++;
				}
				break;
			}
			case 5:
			{
				if (ch == 0)
				{
					c[0]++;
					c[1]++;
					c[6]++;
					c[7]++;
					c[8]++;
					c[9]++;
					c[14]++;
					c[15]++;
				}
				else
				{
					c[2]++;
					c[3]++;
					c[4]++;
					c[5]++;
					c[10]++;
					c[11]++;
					c[12]++;
					c[13]++;
				}
				break;
			}
			case 6:
			{
				if(ch == 0)
				{
					c[0]++;
					c[1]++;
					c[2]++;
					c[3]++;
					c[8]++;
					c[9]++;
					c[10]++;
					c[11]++;
				}
				else
				{
					c[4]++;
					c[5]++;
					c[6]++;
					c[7]++;
					c[12]++;
					c[13]++;
					c[14]++;
					c[15]++;
				}
				break;
			}
			case 7:
			{
				if(ch == 0)
				{
					c[0]++;
					c[1]++;
					c[6]++;
					c[7]++;
					c[10]++;
					c[11]++;
					c[12]++;
					c[13]++;
				}
				else
				{
					c[2]++;
					c[3]++;
					c[4]++;
					c[5]++;
					c[8]++;
					c[9]++;
					c[14]++;
					c[15]++;
				}
				break;
			}
			case 8:
			{
				if(ch== 0)
				{
					c[0]++;
					c[1]++;
					c[4]++;
					c[5]++;
					c[10]++;
					c[11]++;
					c[14]++;
					c[15]++;
				}
				else 
				{
					c[2]++;
					c[3]++;
					c[6]++;
					c[7]++;
					c[8]++;
					c[9]++;
					c[12]++;
					c[13]++;
				}
				break;
			}
			case 9:
			{
				if(ch == 0)
				{
					c[0]++;
					c[2]++;
					c[4]++;
					c[6]++;
					c[9]++;
					c[11]++;
					c[13]++;
					c[15]++;
				}
				else
				{
					c[1]++;
					c[3]++;
					c[5]++;
					c[7]++;
					c[8]++;
					c[10]++;
					c[12]++;
					c[14]++;
				}
				break;
			}
			case 10:
			{
				if(ch == 0)
				{
					c[0]++;
					c[2]++;
					c[5]++;
					c[7]++;
					c[9]++;
					c[11]++;
					c[12]++;
					c[14]++;
				}
				else
				{
					c[1]++;
					c[3]++;
					c[4]++;
					c[6]++;
					c[8]++;
					c[10]++;
					c[13]++;
					c[15]++;
				}
				break;
			}
			case 11:
			{
				if(ch == 0)
				{
					c[0]++;
					c[3]++;
					c[5]++;
					c[6]++;
					c[8]++;
					c[11]++;
					c[13]++;
					c[14]++;
				}
				else
				{
					c[1]++;
					c[2]++;
					c[4]++;
					c[7]++;
					c[9]++;
					c[10]++;
					c[12]++;
					c[15]++;
				}
				break;
			}
			case 12:
			{
				if(ch == 0)
				{
					c[0]++;
					c[2]++;
					c[5]++;
					c[7]++;
					c[8]++;
					c[10]++;
					c[13]++;
					c[15]++;
				}
				else
				{
					c[1]++;
					c[3]++;
					c[4]++;
					c[6]++;
					c[9]++;
					c[11]++;
					c[14]++;
				}
				break;
			}
			case 14:
			{
				if(ch==0)
				{
					c[0]++;
					c[1]++;
					c[4]++;
					c[8]++;
					c[9]++;
					c[12]++;
					c[13]++;
				}
				else
				{
					c[2]++;
					c[3]++;
					c[5]++;
					c[6]++;
					c[7]++;
					c[10]++;
					c[11]++;
					c[14]++;
					c[15]++;
				}
				break;
			}
			case 15:
			{
				if(ch ==0)
				{
					c[0]++;
					c[1]++;
					c[2]++;
					c[3]++;
					c[4]++;
					c[5]++;
					c[6]++;
					c[7]++;
				}
				else
				{
					c[8]++;
					c[9]++;
					c[10]++;
					c[11]++;
					c[12]++;
					c[13]++;
					c[14]++;
					c[15]++;
				}
				break;
			}
			case 17:
			{
				if (ch == 0)
				{
					c[0]++;
					c[1]++;
					c[2]++;
					c[3]++;
					c[12]++;
					c[13]++;
					c[14]++;
					c[15]++;
				}
				else
				{
					c[4]++;
					c[5]++;
					c[6]++;
					c[7]++;
					c[8]++;
					c[9]++;
					c[10]++;
					c[11]++;
				}
				break;
			}
			case 19:
			{
				if(ch == 0)
				{
					c[0]++;
					c[3]++;
					c[4]++;
					c[7]++;
					c[8]++;
					c[11]++;
					c[12]++;
					c[15]++;
				}
				else
				{
					c[1]++;
					c[2]++;
					c[5]++;
					c[6]++;
					c[9]++;
					c[10]++;
					c[13]++;
					c[14]++;
				}
				break;
			}
		}
	}
	public int getMax()
	{
		int max = 0;
		for(int i = 0; i < 16; i++)
		{
			if (c[i]>c[max])
			{
				max = i;
			}
		}
		return max+1;
	}
	public int getelem(int n)
	{
		return c[n];
	}
	private int[] c = new int[16];
}
